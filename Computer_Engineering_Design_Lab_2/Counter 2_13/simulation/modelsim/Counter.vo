// Copyright (C) 2022  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 21.1.1 Build 850 06/23/2022 SJ Lite Edition"

// DATE "02/13/2025 15:21:17"

// 
// Device: Altera 10M50DAF484C7G Package FBGA484
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Counter (
	MAX10_CLK1_50,
	KEY,
	LEDR,
	SW);
input 	MAX10_CLK1_50;
input 	[1:0] KEY;
output 	[9:0] LEDR;
input 	[9:0] SW;

// Design Ports Information
// LEDR[0]	=>  Location: PIN_A8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[1]	=>  Location: PIN_A9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[2]	=>  Location: PIN_A10,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[3]	=>  Location: PIN_B10,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[4]	=>  Location: PIN_D13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[5]	=>  Location: PIN_C13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[6]	=>  Location: PIN_E14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[7]	=>  Location: PIN_D14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[8]	=>  Location: PIN_A11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// LEDR[9]	=>  Location: PIN_B11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// SW[4]	=>  Location: PIN_A12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[5]	=>  Location: PIN_B12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[6]	=>  Location: PIN_A13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[7]	=>  Location: PIN_A14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[8]	=>  Location: PIN_B14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[0]	=>  Location: PIN_C10,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[9]	=>  Location: PIN_F15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// KEY[0]	=>  Location: PIN_B8,	 I/O Standard: 3.3 V Schmitt Trigger,	 Current Strength: Default
// KEY[1]	=>  Location: PIN_A7,	 I/O Standard: 3.3 V Schmitt Trigger,	 Current Strength: Default
// SW[1]	=>  Location: PIN_C11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[2]	=>  Location: PIN_D12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[3]	=>  Location: PIN_C12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// MAX10_CLK1_50	=>  Location: PIN_P11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \SW[4]~input_o ;
wire \SW[5]~input_o ;
wire \SW[6]~input_o ;
wire \SW[7]~input_o ;
wire \SW[8]~input_o ;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \~QUARTUS_CREATED_UNVM~~busy ;
wire \~QUARTUS_CREATED_ADC1~~eoc ;
wire \~QUARTUS_CREATED_ADC2~~eoc ;
wire \LEDR[0]~output_o ;
wire \LEDR[1]~output_o ;
wire \LEDR[2]~output_o ;
wire \LEDR[3]~output_o ;
wire \LEDR[4]~output_o ;
wire \LEDR[5]~output_o ;
wire \LEDR[6]~output_o ;
wire \LEDR[7]~output_o ;
wire \LEDR[8]~output_o ;
wire \LEDR[9]~output_o ;
wire \MAX10_CLK1_50~input_o ;
wire \MAX10_CLK1_50~inputclkctrl_outclk ;
wire \clk_divider|counter[0]~32_combout ;
wire \clk_divider|counter[0]~33 ;
wire \clk_divider|counter[1]~34_combout ;
wire \clk_divider|counter[1]~35 ;
wire \clk_divider|counter[2]~36_combout ;
wire \clk_divider|counter[2]~37 ;
wire \clk_divider|counter[3]~38_combout ;
wire \clk_divider|counter[3]~39 ;
wire \clk_divider|counter[4]~40_combout ;
wire \clk_divider|counter[4]~41 ;
wire \clk_divider|counter[5]~42_combout ;
wire \clk_divider|counter[5]~43 ;
wire \clk_divider|counter[6]~44_combout ;
wire \clk_divider|counter[6]~45 ;
wire \clk_divider|counter[7]~46_combout ;
wire \clk_divider|counter[7]~47 ;
wire \clk_divider|counter[8]~48_combout ;
wire \clk_divider|counter[8]~49 ;
wire \clk_divider|counter[9]~50_combout ;
wire \clk_divider|counter[9]~51 ;
wire \clk_divider|counter[10]~52_combout ;
wire \clk_divider|counter[10]~53 ;
wire \clk_divider|counter[11]~54_combout ;
wire \clk_divider|counter[11]~55 ;
wire \clk_divider|counter[12]~56_combout ;
wire \clk_divider|counter[12]~57 ;
wire \clk_divider|counter[13]~58_combout ;
wire \clk_divider|counter[13]~59 ;
wire \clk_divider|counter[14]~60_combout ;
wire \clk_divider|counter[14]~61 ;
wire \clk_divider|counter[15]~62_combout ;
wire \clk_divider|counter[15]~63 ;
wire \clk_divider|counter[16]~64_combout ;
wire \clk_divider|counter[16]~65 ;
wire \clk_divider|counter[17]~66_combout ;
wire \clk_divider|counter[17]~67 ;
wire \clk_divider|counter[18]~68_combout ;
wire \clk_divider|counter[18]~69 ;
wire \clk_divider|counter[19]~70_combout ;
wire \clk_divider|counter[19]~71 ;
wire \clk_divider|counter[20]~72_combout ;
wire \clk_divider|counter[20]~73 ;
wire \clk_divider|counter[21]~74_combout ;
wire \clk_divider|counter[21]~75 ;
wire \clk_divider|counter[22]~76_combout ;
wire \clk_divider|counter[22]~77 ;
wire \clk_divider|counter[23]~78_combout ;
wire \clk_divider|LessThan0~2_combout ;
wire \clk_divider|LessThan0~3_combout ;
wire \clk_divider|LessThan0~5_combout ;
wire \clk_divider|LessThan0~4_combout ;
wire \clk_divider|LessThan0~6_combout ;
wire \clk_divider|LessThan0~7_combout ;
wire \clk_divider|LessThan0~8_combout ;
wire \clk_divider|LessThan0~9_combout ;
wire \clk_divider|counter[23]~79 ;
wire \clk_divider|counter[24]~80_combout ;
wire \clk_divider|counter[24]~81 ;
wire \clk_divider|counter[25]~82_combout ;
wire \clk_divider|counter[25]~83 ;
wire \clk_divider|counter[26]~84_combout ;
wire \clk_divider|counter[26]~85 ;
wire \clk_divider|counter[27]~86_combout ;
wire \clk_divider|counter[27]~87 ;
wire \clk_divider|counter[28]~88_combout ;
wire \clk_divider|LessThan0~0_combout ;
wire \clk_divider|counter[28]~89 ;
wire \clk_divider|counter[29]~90_combout ;
wire \clk_divider|counter[29]~91 ;
wire \clk_divider|counter[30]~92_combout ;
wire \clk_divider|counter[30]~93 ;
wire \clk_divider|counter[31]~94_combout ;
wire \clk_divider|LessThan0~1_combout ;
wire \clk_divider|LessThan0~10_combout ;
wire \clk_divider|clk_out~0_combout ;
wire \clk_divider|clk_out~q ;
wire \clk_divider|clk_out~clkctrl_outclk ;
wire \SW[0]~input_o ;
wire \SW[9]~input_o ;
wire \C1|count~3_combout ;
wire \KEY[0]~input_o ;
wire \KEY[1]~input_o ;
wire \C1|count[1]~5_cout ;
wire \C1|count[1]~6_combout ;
wire \SW[1]~input_o ;
wire \C1|count[1]~7 ;
wire \C1|count[2]~8_combout ;
wire \SW[2]~input_o ;
wire \C1|count[2]~9 ;
wire \C1|count[3]~10_combout ;
wire \SW[3]~input_o ;
wire [3:0] \C1|count ;
wire [31:0] \clk_divider|counter ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: LCCOMB_X44_Y52_N16
fiftyfivenm_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):
// \~QUARTUS_CREATED_GND~I_combout  = GND

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.cout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 16'h0000;
defparam \~QUARTUS_CREATED_GND~I .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOOBUF_X46_Y54_N2
fiftyfivenm_io_obuf \LEDR[0]~output (
	.i(\C1|count [0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[0]~output .bus_hold = "false";
defparam \LEDR[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X46_Y54_N23
fiftyfivenm_io_obuf \LEDR[1]~output (
	.i(\C1|count [1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[1]~output .bus_hold = "false";
defparam \LEDR[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X51_Y54_N16
fiftyfivenm_io_obuf \LEDR[2]~output (
	.i(\C1|count [2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[2]~output .bus_hold = "false";
defparam \LEDR[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X46_Y54_N9
fiftyfivenm_io_obuf \LEDR[3]~output (
	.i(\C1|count [3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[3]~output .bus_hold = "false";
defparam \LEDR[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X56_Y54_N30
fiftyfivenm_io_obuf \LEDR[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[4]~output .bus_hold = "false";
defparam \LEDR[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X58_Y54_N23
fiftyfivenm_io_obuf \LEDR[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[5]~output .bus_hold = "false";
defparam \LEDR[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X66_Y54_N23
fiftyfivenm_io_obuf \LEDR[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[6]~output .bus_hold = "false";
defparam \LEDR[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X56_Y54_N9
fiftyfivenm_io_obuf \LEDR[7]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[7]~output .bus_hold = "false";
defparam \LEDR[7]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X51_Y54_N9
fiftyfivenm_io_obuf \LEDR[8]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[8]~output .bus_hold = "false";
defparam \LEDR[8]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X49_Y54_N9
fiftyfivenm_io_obuf \LEDR[9]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[9]~output .bus_hold = "false";
defparam \LEDR[9]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X34_Y0_N29
fiftyfivenm_io_ibuf \MAX10_CLK1_50~input (
	.i(MAX10_CLK1_50),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\MAX10_CLK1_50~input_o ));
// synopsys translate_off
defparam \MAX10_CLK1_50~input .bus_hold = "false";
defparam \MAX10_CLK1_50~input .listen_to_nsleep_signal = "false";
defparam \MAX10_CLK1_50~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G19
fiftyfivenm_clkctrl \MAX10_CLK1_50~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\MAX10_CLK1_50~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\MAX10_CLK1_50~inputclkctrl_outclk ));
// synopsys translate_off
defparam \MAX10_CLK1_50~inputclkctrl .clock_type = "global clock";
defparam \MAX10_CLK1_50~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N0
fiftyfivenm_lcell_comb \clk_divider|counter[0]~32 (
// Equation(s):
// \clk_divider|counter[0]~32_combout  = \clk_divider|counter [0] $ (VCC)
// \clk_divider|counter[0]~33  = CARRY(\clk_divider|counter [0])

	.dataa(gnd),
	.datab(\clk_divider|counter [0]),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\clk_divider|counter[0]~32_combout ),
	.cout(\clk_divider|counter[0]~33 ));
// synopsys translate_off
defparam \clk_divider|counter[0]~32 .lut_mask = 16'h33CC;
defparam \clk_divider|counter[0]~32 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X41_Y2_N1
dffeas \clk_divider|counter[0] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[0]~32_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [0]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[0] .is_wysiwyg = "true";
defparam \clk_divider|counter[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N2
fiftyfivenm_lcell_comb \clk_divider|counter[1]~34 (
// Equation(s):
// \clk_divider|counter[1]~34_combout  = (\clk_divider|counter [1] & (!\clk_divider|counter[0]~33 )) # (!\clk_divider|counter [1] & ((\clk_divider|counter[0]~33 ) # (GND)))
// \clk_divider|counter[1]~35  = CARRY((!\clk_divider|counter[0]~33 ) # (!\clk_divider|counter [1]))

	.dataa(gnd),
	.datab(\clk_divider|counter [1]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[0]~33 ),
	.combout(\clk_divider|counter[1]~34_combout ),
	.cout(\clk_divider|counter[1]~35 ));
// synopsys translate_off
defparam \clk_divider|counter[1]~34 .lut_mask = 16'h3C3F;
defparam \clk_divider|counter[1]~34 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N3
dffeas \clk_divider|counter[1] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[1]~34_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [1]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[1] .is_wysiwyg = "true";
defparam \clk_divider|counter[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N4
fiftyfivenm_lcell_comb \clk_divider|counter[2]~36 (
// Equation(s):
// \clk_divider|counter[2]~36_combout  = (\clk_divider|counter [2] & (\clk_divider|counter[1]~35  $ (GND))) # (!\clk_divider|counter [2] & (!\clk_divider|counter[1]~35  & VCC))
// \clk_divider|counter[2]~37  = CARRY((\clk_divider|counter [2] & !\clk_divider|counter[1]~35 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [2]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[1]~35 ),
	.combout(\clk_divider|counter[2]~36_combout ),
	.cout(\clk_divider|counter[2]~37 ));
// synopsys translate_off
defparam \clk_divider|counter[2]~36 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[2]~36 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N5
dffeas \clk_divider|counter[2] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[2]~36_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [2]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[2] .is_wysiwyg = "true";
defparam \clk_divider|counter[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N6
fiftyfivenm_lcell_comb \clk_divider|counter[3]~38 (
// Equation(s):
// \clk_divider|counter[3]~38_combout  = (\clk_divider|counter [3] & (!\clk_divider|counter[2]~37 )) # (!\clk_divider|counter [3] & ((\clk_divider|counter[2]~37 ) # (GND)))
// \clk_divider|counter[3]~39  = CARRY((!\clk_divider|counter[2]~37 ) # (!\clk_divider|counter [3]))

	.dataa(\clk_divider|counter [3]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[2]~37 ),
	.combout(\clk_divider|counter[3]~38_combout ),
	.cout(\clk_divider|counter[3]~39 ));
// synopsys translate_off
defparam \clk_divider|counter[3]~38 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[3]~38 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N7
dffeas \clk_divider|counter[3] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[3]~38_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [3]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[3] .is_wysiwyg = "true";
defparam \clk_divider|counter[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N8
fiftyfivenm_lcell_comb \clk_divider|counter[4]~40 (
// Equation(s):
// \clk_divider|counter[4]~40_combout  = (\clk_divider|counter [4] & (\clk_divider|counter[3]~39  $ (GND))) # (!\clk_divider|counter [4] & (!\clk_divider|counter[3]~39  & VCC))
// \clk_divider|counter[4]~41  = CARRY((\clk_divider|counter [4] & !\clk_divider|counter[3]~39 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [4]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[3]~39 ),
	.combout(\clk_divider|counter[4]~40_combout ),
	.cout(\clk_divider|counter[4]~41 ));
// synopsys translate_off
defparam \clk_divider|counter[4]~40 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[4]~40 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N9
dffeas \clk_divider|counter[4] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[4]~40_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [4]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[4] .is_wysiwyg = "true";
defparam \clk_divider|counter[4] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N10
fiftyfivenm_lcell_comb \clk_divider|counter[5]~42 (
// Equation(s):
// \clk_divider|counter[5]~42_combout  = (\clk_divider|counter [5] & (!\clk_divider|counter[4]~41 )) # (!\clk_divider|counter [5] & ((\clk_divider|counter[4]~41 ) # (GND)))
// \clk_divider|counter[5]~43  = CARRY((!\clk_divider|counter[4]~41 ) # (!\clk_divider|counter [5]))

	.dataa(\clk_divider|counter [5]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[4]~41 ),
	.combout(\clk_divider|counter[5]~42_combout ),
	.cout(\clk_divider|counter[5]~43 ));
// synopsys translate_off
defparam \clk_divider|counter[5]~42 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[5]~42 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N11
dffeas \clk_divider|counter[5] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[5]~42_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [5]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[5] .is_wysiwyg = "true";
defparam \clk_divider|counter[5] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N12
fiftyfivenm_lcell_comb \clk_divider|counter[6]~44 (
// Equation(s):
// \clk_divider|counter[6]~44_combout  = (\clk_divider|counter [6] & (\clk_divider|counter[5]~43  $ (GND))) # (!\clk_divider|counter [6] & (!\clk_divider|counter[5]~43  & VCC))
// \clk_divider|counter[6]~45  = CARRY((\clk_divider|counter [6] & !\clk_divider|counter[5]~43 ))

	.dataa(\clk_divider|counter [6]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[5]~43 ),
	.combout(\clk_divider|counter[6]~44_combout ),
	.cout(\clk_divider|counter[6]~45 ));
// synopsys translate_off
defparam \clk_divider|counter[6]~44 .lut_mask = 16'hA50A;
defparam \clk_divider|counter[6]~44 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N13
dffeas \clk_divider|counter[6] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[6]~44_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [6]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[6] .is_wysiwyg = "true";
defparam \clk_divider|counter[6] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N14
fiftyfivenm_lcell_comb \clk_divider|counter[7]~46 (
// Equation(s):
// \clk_divider|counter[7]~46_combout  = (\clk_divider|counter [7] & (!\clk_divider|counter[6]~45 )) # (!\clk_divider|counter [7] & ((\clk_divider|counter[6]~45 ) # (GND)))
// \clk_divider|counter[7]~47  = CARRY((!\clk_divider|counter[6]~45 ) # (!\clk_divider|counter [7]))

	.dataa(gnd),
	.datab(\clk_divider|counter [7]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[6]~45 ),
	.combout(\clk_divider|counter[7]~46_combout ),
	.cout(\clk_divider|counter[7]~47 ));
// synopsys translate_off
defparam \clk_divider|counter[7]~46 .lut_mask = 16'h3C3F;
defparam \clk_divider|counter[7]~46 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N15
dffeas \clk_divider|counter[7] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[7]~46_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [7]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[7] .is_wysiwyg = "true";
defparam \clk_divider|counter[7] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N16
fiftyfivenm_lcell_comb \clk_divider|counter[8]~48 (
// Equation(s):
// \clk_divider|counter[8]~48_combout  = (\clk_divider|counter [8] & (\clk_divider|counter[7]~47  $ (GND))) # (!\clk_divider|counter [8] & (!\clk_divider|counter[7]~47  & VCC))
// \clk_divider|counter[8]~49  = CARRY((\clk_divider|counter [8] & !\clk_divider|counter[7]~47 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [8]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[7]~47 ),
	.combout(\clk_divider|counter[8]~48_combout ),
	.cout(\clk_divider|counter[8]~49 ));
// synopsys translate_off
defparam \clk_divider|counter[8]~48 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[8]~48 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N17
dffeas \clk_divider|counter[8] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[8]~48_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [8]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[8] .is_wysiwyg = "true";
defparam \clk_divider|counter[8] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N18
fiftyfivenm_lcell_comb \clk_divider|counter[9]~50 (
// Equation(s):
// \clk_divider|counter[9]~50_combout  = (\clk_divider|counter [9] & (!\clk_divider|counter[8]~49 )) # (!\clk_divider|counter [9] & ((\clk_divider|counter[8]~49 ) # (GND)))
// \clk_divider|counter[9]~51  = CARRY((!\clk_divider|counter[8]~49 ) # (!\clk_divider|counter [9]))

	.dataa(gnd),
	.datab(\clk_divider|counter [9]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[8]~49 ),
	.combout(\clk_divider|counter[9]~50_combout ),
	.cout(\clk_divider|counter[9]~51 ));
// synopsys translate_off
defparam \clk_divider|counter[9]~50 .lut_mask = 16'h3C3F;
defparam \clk_divider|counter[9]~50 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N19
dffeas \clk_divider|counter[9] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[9]~50_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [9]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[9] .is_wysiwyg = "true";
defparam \clk_divider|counter[9] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N20
fiftyfivenm_lcell_comb \clk_divider|counter[10]~52 (
// Equation(s):
// \clk_divider|counter[10]~52_combout  = (\clk_divider|counter [10] & (\clk_divider|counter[9]~51  $ (GND))) # (!\clk_divider|counter [10] & (!\clk_divider|counter[9]~51  & VCC))
// \clk_divider|counter[10]~53  = CARRY((\clk_divider|counter [10] & !\clk_divider|counter[9]~51 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [10]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[9]~51 ),
	.combout(\clk_divider|counter[10]~52_combout ),
	.cout(\clk_divider|counter[10]~53 ));
// synopsys translate_off
defparam \clk_divider|counter[10]~52 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[10]~52 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N21
dffeas \clk_divider|counter[10] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[10]~52_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [10]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[10] .is_wysiwyg = "true";
defparam \clk_divider|counter[10] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N22
fiftyfivenm_lcell_comb \clk_divider|counter[11]~54 (
// Equation(s):
// \clk_divider|counter[11]~54_combout  = (\clk_divider|counter [11] & (!\clk_divider|counter[10]~53 )) # (!\clk_divider|counter [11] & ((\clk_divider|counter[10]~53 ) # (GND)))
// \clk_divider|counter[11]~55  = CARRY((!\clk_divider|counter[10]~53 ) # (!\clk_divider|counter [11]))

	.dataa(\clk_divider|counter [11]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[10]~53 ),
	.combout(\clk_divider|counter[11]~54_combout ),
	.cout(\clk_divider|counter[11]~55 ));
// synopsys translate_off
defparam \clk_divider|counter[11]~54 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[11]~54 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N23
dffeas \clk_divider|counter[11] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[11]~54_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [11]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[11] .is_wysiwyg = "true";
defparam \clk_divider|counter[11] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N24
fiftyfivenm_lcell_comb \clk_divider|counter[12]~56 (
// Equation(s):
// \clk_divider|counter[12]~56_combout  = (\clk_divider|counter [12] & (\clk_divider|counter[11]~55  $ (GND))) # (!\clk_divider|counter [12] & (!\clk_divider|counter[11]~55  & VCC))
// \clk_divider|counter[12]~57  = CARRY((\clk_divider|counter [12] & !\clk_divider|counter[11]~55 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [12]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[11]~55 ),
	.combout(\clk_divider|counter[12]~56_combout ),
	.cout(\clk_divider|counter[12]~57 ));
// synopsys translate_off
defparam \clk_divider|counter[12]~56 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[12]~56 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N25
dffeas \clk_divider|counter[12] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[12]~56_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [12]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[12] .is_wysiwyg = "true";
defparam \clk_divider|counter[12] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N26
fiftyfivenm_lcell_comb \clk_divider|counter[13]~58 (
// Equation(s):
// \clk_divider|counter[13]~58_combout  = (\clk_divider|counter [13] & (!\clk_divider|counter[12]~57 )) # (!\clk_divider|counter [13] & ((\clk_divider|counter[12]~57 ) # (GND)))
// \clk_divider|counter[13]~59  = CARRY((!\clk_divider|counter[12]~57 ) # (!\clk_divider|counter [13]))

	.dataa(\clk_divider|counter [13]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[12]~57 ),
	.combout(\clk_divider|counter[13]~58_combout ),
	.cout(\clk_divider|counter[13]~59 ));
// synopsys translate_off
defparam \clk_divider|counter[13]~58 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[13]~58 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N27
dffeas \clk_divider|counter[13] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[13]~58_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [13]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[13] .is_wysiwyg = "true";
defparam \clk_divider|counter[13] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N28
fiftyfivenm_lcell_comb \clk_divider|counter[14]~60 (
// Equation(s):
// \clk_divider|counter[14]~60_combout  = (\clk_divider|counter [14] & (\clk_divider|counter[13]~59  $ (GND))) # (!\clk_divider|counter [14] & (!\clk_divider|counter[13]~59  & VCC))
// \clk_divider|counter[14]~61  = CARRY((\clk_divider|counter [14] & !\clk_divider|counter[13]~59 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [14]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[13]~59 ),
	.combout(\clk_divider|counter[14]~60_combout ),
	.cout(\clk_divider|counter[14]~61 ));
// synopsys translate_off
defparam \clk_divider|counter[14]~60 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[14]~60 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N29
dffeas \clk_divider|counter[14] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[14]~60_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [14]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[14] .is_wysiwyg = "true";
defparam \clk_divider|counter[14] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y2_N30
fiftyfivenm_lcell_comb \clk_divider|counter[15]~62 (
// Equation(s):
// \clk_divider|counter[15]~62_combout  = (\clk_divider|counter [15] & (!\clk_divider|counter[14]~61 )) # (!\clk_divider|counter [15] & ((\clk_divider|counter[14]~61 ) # (GND)))
// \clk_divider|counter[15]~63  = CARRY((!\clk_divider|counter[14]~61 ) # (!\clk_divider|counter [15]))

	.dataa(\clk_divider|counter [15]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[14]~61 ),
	.combout(\clk_divider|counter[15]~62_combout ),
	.cout(\clk_divider|counter[15]~63 ));
// synopsys translate_off
defparam \clk_divider|counter[15]~62 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[15]~62 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y2_N31
dffeas \clk_divider|counter[15] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[15]~62_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [15]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[15] .is_wysiwyg = "true";
defparam \clk_divider|counter[15] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N0
fiftyfivenm_lcell_comb \clk_divider|counter[16]~64 (
// Equation(s):
// \clk_divider|counter[16]~64_combout  = (\clk_divider|counter [16] & (\clk_divider|counter[15]~63  $ (GND))) # (!\clk_divider|counter [16] & (!\clk_divider|counter[15]~63  & VCC))
// \clk_divider|counter[16]~65  = CARRY((\clk_divider|counter [16] & !\clk_divider|counter[15]~63 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [16]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[15]~63 ),
	.combout(\clk_divider|counter[16]~64_combout ),
	.cout(\clk_divider|counter[16]~65 ));
// synopsys translate_off
defparam \clk_divider|counter[16]~64 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[16]~64 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N1
dffeas \clk_divider|counter[16] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[16]~64_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [16]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[16] .is_wysiwyg = "true";
defparam \clk_divider|counter[16] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N2
fiftyfivenm_lcell_comb \clk_divider|counter[17]~66 (
// Equation(s):
// \clk_divider|counter[17]~66_combout  = (\clk_divider|counter [17] & (!\clk_divider|counter[16]~65 )) # (!\clk_divider|counter [17] & ((\clk_divider|counter[16]~65 ) # (GND)))
// \clk_divider|counter[17]~67  = CARRY((!\clk_divider|counter[16]~65 ) # (!\clk_divider|counter [17]))

	.dataa(gnd),
	.datab(\clk_divider|counter [17]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[16]~65 ),
	.combout(\clk_divider|counter[17]~66_combout ),
	.cout(\clk_divider|counter[17]~67 ));
// synopsys translate_off
defparam \clk_divider|counter[17]~66 .lut_mask = 16'h3C3F;
defparam \clk_divider|counter[17]~66 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N3
dffeas \clk_divider|counter[17] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[17]~66_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [17]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[17] .is_wysiwyg = "true";
defparam \clk_divider|counter[17] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N4
fiftyfivenm_lcell_comb \clk_divider|counter[18]~68 (
// Equation(s):
// \clk_divider|counter[18]~68_combout  = (\clk_divider|counter [18] & (\clk_divider|counter[17]~67  $ (GND))) # (!\clk_divider|counter [18] & (!\clk_divider|counter[17]~67  & VCC))
// \clk_divider|counter[18]~69  = CARRY((\clk_divider|counter [18] & !\clk_divider|counter[17]~67 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [18]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[17]~67 ),
	.combout(\clk_divider|counter[18]~68_combout ),
	.cout(\clk_divider|counter[18]~69 ));
// synopsys translate_off
defparam \clk_divider|counter[18]~68 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[18]~68 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N5
dffeas \clk_divider|counter[18] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[18]~68_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [18]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[18] .is_wysiwyg = "true";
defparam \clk_divider|counter[18] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N6
fiftyfivenm_lcell_comb \clk_divider|counter[19]~70 (
// Equation(s):
// \clk_divider|counter[19]~70_combout  = (\clk_divider|counter [19] & (!\clk_divider|counter[18]~69 )) # (!\clk_divider|counter [19] & ((\clk_divider|counter[18]~69 ) # (GND)))
// \clk_divider|counter[19]~71  = CARRY((!\clk_divider|counter[18]~69 ) # (!\clk_divider|counter [19]))

	.dataa(\clk_divider|counter [19]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[18]~69 ),
	.combout(\clk_divider|counter[19]~70_combout ),
	.cout(\clk_divider|counter[19]~71 ));
// synopsys translate_off
defparam \clk_divider|counter[19]~70 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[19]~70 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N7
dffeas \clk_divider|counter[19] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[19]~70_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [19]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[19] .is_wysiwyg = "true";
defparam \clk_divider|counter[19] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N8
fiftyfivenm_lcell_comb \clk_divider|counter[20]~72 (
// Equation(s):
// \clk_divider|counter[20]~72_combout  = (\clk_divider|counter [20] & (\clk_divider|counter[19]~71  $ (GND))) # (!\clk_divider|counter [20] & (!\clk_divider|counter[19]~71  & VCC))
// \clk_divider|counter[20]~73  = CARRY((\clk_divider|counter [20] & !\clk_divider|counter[19]~71 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [20]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[19]~71 ),
	.combout(\clk_divider|counter[20]~72_combout ),
	.cout(\clk_divider|counter[20]~73 ));
// synopsys translate_off
defparam \clk_divider|counter[20]~72 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[20]~72 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N9
dffeas \clk_divider|counter[20] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[20]~72_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [20]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[20] .is_wysiwyg = "true";
defparam \clk_divider|counter[20] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N10
fiftyfivenm_lcell_comb \clk_divider|counter[21]~74 (
// Equation(s):
// \clk_divider|counter[21]~74_combout  = (\clk_divider|counter [21] & (!\clk_divider|counter[20]~73 )) # (!\clk_divider|counter [21] & ((\clk_divider|counter[20]~73 ) # (GND)))
// \clk_divider|counter[21]~75  = CARRY((!\clk_divider|counter[20]~73 ) # (!\clk_divider|counter [21]))

	.dataa(\clk_divider|counter [21]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[20]~73 ),
	.combout(\clk_divider|counter[21]~74_combout ),
	.cout(\clk_divider|counter[21]~75 ));
// synopsys translate_off
defparam \clk_divider|counter[21]~74 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[21]~74 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N11
dffeas \clk_divider|counter[21] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[21]~74_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [21]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[21] .is_wysiwyg = "true";
defparam \clk_divider|counter[21] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N12
fiftyfivenm_lcell_comb \clk_divider|counter[22]~76 (
// Equation(s):
// \clk_divider|counter[22]~76_combout  = (\clk_divider|counter [22] & (\clk_divider|counter[21]~75  $ (GND))) # (!\clk_divider|counter [22] & (!\clk_divider|counter[21]~75  & VCC))
// \clk_divider|counter[22]~77  = CARRY((\clk_divider|counter [22] & !\clk_divider|counter[21]~75 ))

	.dataa(\clk_divider|counter [22]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[21]~75 ),
	.combout(\clk_divider|counter[22]~76_combout ),
	.cout(\clk_divider|counter[22]~77 ));
// synopsys translate_off
defparam \clk_divider|counter[22]~76 .lut_mask = 16'hA50A;
defparam \clk_divider|counter[22]~76 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N13
dffeas \clk_divider|counter[22] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[22]~76_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [22]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[22] .is_wysiwyg = "true";
defparam \clk_divider|counter[22] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N14
fiftyfivenm_lcell_comb \clk_divider|counter[23]~78 (
// Equation(s):
// \clk_divider|counter[23]~78_combout  = (\clk_divider|counter [23] & (!\clk_divider|counter[22]~77 )) # (!\clk_divider|counter [23] & ((\clk_divider|counter[22]~77 ) # (GND)))
// \clk_divider|counter[23]~79  = CARRY((!\clk_divider|counter[22]~77 ) # (!\clk_divider|counter [23]))

	.dataa(gnd),
	.datab(\clk_divider|counter [23]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[22]~77 ),
	.combout(\clk_divider|counter[23]~78_combout ),
	.cout(\clk_divider|counter[23]~79 ));
// synopsys translate_off
defparam \clk_divider|counter[23]~78 .lut_mask = 16'h3C3F;
defparam \clk_divider|counter[23]~78 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N15
dffeas \clk_divider|counter[23] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[23]~78_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [23]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[23] .is_wysiwyg = "true";
defparam \clk_divider|counter[23] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X40_Y1_N12
fiftyfivenm_lcell_comb \clk_divider|LessThan0~2 (
// Equation(s):
// \clk_divider|LessThan0~2_combout  = (((!\clk_divider|counter [17] & !\clk_divider|counter [16])) # (!\clk_divider|counter [19])) # (!\clk_divider|counter [18])

	.dataa(\clk_divider|counter [17]),
	.datab(\clk_divider|counter [18]),
	.datac(\clk_divider|counter [16]),
	.datad(\clk_divider|counter [19]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~2_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~2 .lut_mask = 16'h37FF;
defparam \clk_divider|LessThan0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X40_Y1_N6
fiftyfivenm_lcell_comb \clk_divider|LessThan0~3 (
// Equation(s):
// \clk_divider|LessThan0~3_combout  = (((\clk_divider|LessThan0~2_combout ) # (!\clk_divider|counter [20])) # (!\clk_divider|counter [21])) # (!\clk_divider|counter [22])

	.dataa(\clk_divider|counter [22]),
	.datab(\clk_divider|counter [21]),
	.datac(\clk_divider|counter [20]),
	.datad(\clk_divider|LessThan0~2_combout ),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~3_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~3 .lut_mask = 16'hFF7F;
defparam \clk_divider|LessThan0~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X40_Y2_N10
fiftyfivenm_lcell_comb \clk_divider|LessThan0~5 (
// Equation(s):
// \clk_divider|LessThan0~5_combout  = (!\clk_divider|counter [10] & (!\clk_divider|counter [9] & (!\clk_divider|counter [7] & !\clk_divider|counter [8])))

	.dataa(\clk_divider|counter [10]),
	.datab(\clk_divider|counter [9]),
	.datac(\clk_divider|counter [7]),
	.datad(\clk_divider|counter [8]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~5_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~5 .lut_mask = 16'h0001;
defparam \clk_divider|LessThan0~5 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X40_Y2_N24
fiftyfivenm_lcell_comb \clk_divider|LessThan0~4 (
// Equation(s):
// \clk_divider|LessThan0~4_combout  = (((!\clk_divider|counter [11]) # (!\clk_divider|counter [13])) # (!\clk_divider|counter [14])) # (!\clk_divider|counter [12])

	.dataa(\clk_divider|counter [12]),
	.datab(\clk_divider|counter [14]),
	.datac(\clk_divider|counter [13]),
	.datad(\clk_divider|counter [11]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~4_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~4 .lut_mask = 16'h7FFF;
defparam \clk_divider|LessThan0~4 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X42_Y2_N24
fiftyfivenm_lcell_comb \clk_divider|LessThan0~6 (
// Equation(s):
// \clk_divider|LessThan0~6_combout  = (((!\clk_divider|counter [1]) # (!\clk_divider|counter [2])) # (!\clk_divider|counter [3])) # (!\clk_divider|counter [0])

	.dataa(\clk_divider|counter [0]),
	.datab(\clk_divider|counter [3]),
	.datac(\clk_divider|counter [2]),
	.datad(\clk_divider|counter [1]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~6_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~6 .lut_mask = 16'h7FFF;
defparam \clk_divider|LessThan0~6 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X42_Y2_N26
fiftyfivenm_lcell_comb \clk_divider|LessThan0~7 (
// Equation(s):
// \clk_divider|LessThan0~7_combout  = ((\clk_divider|LessThan0~6_combout ) # (!\clk_divider|counter [4])) # (!\clk_divider|counter [5])

	.dataa(\clk_divider|counter [5]),
	.datab(\clk_divider|LessThan0~6_combout ),
	.datac(gnd),
	.datad(\clk_divider|counter [4]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~7_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~7 .lut_mask = 16'hDDFF;
defparam \clk_divider|LessThan0~7 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X40_Y2_N20
fiftyfivenm_lcell_comb \clk_divider|LessThan0~8 (
// Equation(s):
// \clk_divider|LessThan0~8_combout  = (\clk_divider|LessThan0~4_combout ) # ((\clk_divider|LessThan0~5_combout  & (!\clk_divider|counter [6] & \clk_divider|LessThan0~7_combout )))

	.dataa(\clk_divider|LessThan0~5_combout ),
	.datab(\clk_divider|LessThan0~4_combout ),
	.datac(\clk_divider|counter [6]),
	.datad(\clk_divider|LessThan0~7_combout ),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~8_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~8 .lut_mask = 16'hCECC;
defparam \clk_divider|LessThan0~8 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X40_Y1_N18
fiftyfivenm_lcell_comb \clk_divider|LessThan0~9 (
// Equation(s):
// \clk_divider|LessThan0~9_combout  = (\clk_divider|LessThan0~3_combout ) # ((!\clk_divider|counter [15] & (\clk_divider|LessThan0~8_combout  & !\clk_divider|counter [17])))

	.dataa(\clk_divider|LessThan0~3_combout ),
	.datab(\clk_divider|counter [15]),
	.datac(\clk_divider|LessThan0~8_combout ),
	.datad(\clk_divider|counter [17]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~9_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~9 .lut_mask = 16'hAABA;
defparam \clk_divider|LessThan0~9 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N16
fiftyfivenm_lcell_comb \clk_divider|counter[24]~80 (
// Equation(s):
// \clk_divider|counter[24]~80_combout  = (\clk_divider|counter [24] & (\clk_divider|counter[23]~79  $ (GND))) # (!\clk_divider|counter [24] & (!\clk_divider|counter[23]~79  & VCC))
// \clk_divider|counter[24]~81  = CARRY((\clk_divider|counter [24] & !\clk_divider|counter[23]~79 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [24]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[23]~79 ),
	.combout(\clk_divider|counter[24]~80_combout ),
	.cout(\clk_divider|counter[24]~81 ));
// synopsys translate_off
defparam \clk_divider|counter[24]~80 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[24]~80 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N17
dffeas \clk_divider|counter[24] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[24]~80_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [24]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[24] .is_wysiwyg = "true";
defparam \clk_divider|counter[24] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N18
fiftyfivenm_lcell_comb \clk_divider|counter[25]~82 (
// Equation(s):
// \clk_divider|counter[25]~82_combout  = (\clk_divider|counter [25] & (!\clk_divider|counter[24]~81 )) # (!\clk_divider|counter [25] & ((\clk_divider|counter[24]~81 ) # (GND)))
// \clk_divider|counter[25]~83  = CARRY((!\clk_divider|counter[24]~81 ) # (!\clk_divider|counter [25]))

	.dataa(gnd),
	.datab(\clk_divider|counter [25]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[24]~81 ),
	.combout(\clk_divider|counter[25]~82_combout ),
	.cout(\clk_divider|counter[25]~83 ));
// synopsys translate_off
defparam \clk_divider|counter[25]~82 .lut_mask = 16'h3C3F;
defparam \clk_divider|counter[25]~82 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N19
dffeas \clk_divider|counter[25] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[25]~82_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [25]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[25] .is_wysiwyg = "true";
defparam \clk_divider|counter[25] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N20
fiftyfivenm_lcell_comb \clk_divider|counter[26]~84 (
// Equation(s):
// \clk_divider|counter[26]~84_combout  = (\clk_divider|counter [26] & (\clk_divider|counter[25]~83  $ (GND))) # (!\clk_divider|counter [26] & (!\clk_divider|counter[25]~83  & VCC))
// \clk_divider|counter[26]~85  = CARRY((\clk_divider|counter [26] & !\clk_divider|counter[25]~83 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [26]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[25]~83 ),
	.combout(\clk_divider|counter[26]~84_combout ),
	.cout(\clk_divider|counter[26]~85 ));
// synopsys translate_off
defparam \clk_divider|counter[26]~84 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[26]~84 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N21
dffeas \clk_divider|counter[26] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[26]~84_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [26]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[26] .is_wysiwyg = "true";
defparam \clk_divider|counter[26] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N22
fiftyfivenm_lcell_comb \clk_divider|counter[27]~86 (
// Equation(s):
// \clk_divider|counter[27]~86_combout  = (\clk_divider|counter [27] & (!\clk_divider|counter[26]~85 )) # (!\clk_divider|counter [27] & ((\clk_divider|counter[26]~85 ) # (GND)))
// \clk_divider|counter[27]~87  = CARRY((!\clk_divider|counter[26]~85 ) # (!\clk_divider|counter [27]))

	.dataa(\clk_divider|counter [27]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[26]~85 ),
	.combout(\clk_divider|counter[27]~86_combout ),
	.cout(\clk_divider|counter[27]~87 ));
// synopsys translate_off
defparam \clk_divider|counter[27]~86 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[27]~86 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N23
dffeas \clk_divider|counter[27] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[27]~86_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [27]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[27] .is_wysiwyg = "true";
defparam \clk_divider|counter[27] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N24
fiftyfivenm_lcell_comb \clk_divider|counter[28]~88 (
// Equation(s):
// \clk_divider|counter[28]~88_combout  = (\clk_divider|counter [28] & (\clk_divider|counter[27]~87  $ (GND))) # (!\clk_divider|counter [28] & (!\clk_divider|counter[27]~87  & VCC))
// \clk_divider|counter[28]~89  = CARRY((\clk_divider|counter [28] & !\clk_divider|counter[27]~87 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [28]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[27]~87 ),
	.combout(\clk_divider|counter[28]~88_combout ),
	.cout(\clk_divider|counter[28]~89 ));
// synopsys translate_off
defparam \clk_divider|counter[28]~88 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[28]~88 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N25
dffeas \clk_divider|counter[28] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[28]~88_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [28]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[28] .is_wysiwyg = "true";
defparam \clk_divider|counter[28] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X40_Y1_N10
fiftyfivenm_lcell_comb \clk_divider|LessThan0~0 (
// Equation(s):
// \clk_divider|LessThan0~0_combout  = (!\clk_divider|counter [25] & (!\clk_divider|counter [28] & (!\clk_divider|counter [26] & !\clk_divider|counter [27])))

	.dataa(\clk_divider|counter [25]),
	.datab(\clk_divider|counter [28]),
	.datac(\clk_divider|counter [26]),
	.datad(\clk_divider|counter [27]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~0 .lut_mask = 16'h0001;
defparam \clk_divider|LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N26
fiftyfivenm_lcell_comb \clk_divider|counter[29]~90 (
// Equation(s):
// \clk_divider|counter[29]~90_combout  = (\clk_divider|counter [29] & (!\clk_divider|counter[28]~89 )) # (!\clk_divider|counter [29] & ((\clk_divider|counter[28]~89 ) # (GND)))
// \clk_divider|counter[29]~91  = CARRY((!\clk_divider|counter[28]~89 ) # (!\clk_divider|counter [29]))

	.dataa(\clk_divider|counter [29]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[28]~89 ),
	.combout(\clk_divider|counter[29]~90_combout ),
	.cout(\clk_divider|counter[29]~91 ));
// synopsys translate_off
defparam \clk_divider|counter[29]~90 .lut_mask = 16'h5A5F;
defparam \clk_divider|counter[29]~90 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N27
dffeas \clk_divider|counter[29] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[29]~90_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [29]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[29] .is_wysiwyg = "true";
defparam \clk_divider|counter[29] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N28
fiftyfivenm_lcell_comb \clk_divider|counter[30]~92 (
// Equation(s):
// \clk_divider|counter[30]~92_combout  = (\clk_divider|counter [30] & (\clk_divider|counter[29]~91  $ (GND))) # (!\clk_divider|counter [30] & (!\clk_divider|counter[29]~91  & VCC))
// \clk_divider|counter[30]~93  = CARRY((\clk_divider|counter [30] & !\clk_divider|counter[29]~91 ))

	.dataa(gnd),
	.datab(\clk_divider|counter [30]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divider|counter[29]~91 ),
	.combout(\clk_divider|counter[30]~92_combout ),
	.cout(\clk_divider|counter[30]~93 ));
// synopsys translate_off
defparam \clk_divider|counter[30]~92 .lut_mask = 16'hC30C;
defparam \clk_divider|counter[30]~92 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N29
dffeas \clk_divider|counter[30] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[30]~92_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [30]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[30] .is_wysiwyg = "true";
defparam \clk_divider|counter[30] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X41_Y1_N30
fiftyfivenm_lcell_comb \clk_divider|counter[31]~94 (
// Equation(s):
// \clk_divider|counter[31]~94_combout  = \clk_divider|counter [31] $ (\clk_divider|counter[30]~93 )

	.dataa(\clk_divider|counter [31]),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(\clk_divider|counter[30]~93 ),
	.combout(\clk_divider|counter[31]~94_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|counter[31]~94 .lut_mask = 16'h5A5A;
defparam \clk_divider|counter[31]~94 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X41_Y1_N31
dffeas \clk_divider|counter[31] (
	.clk(\MAX10_CLK1_50~inputclkctrl_outclk ),
	.d(\clk_divider|counter[31]~94_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_divider|LessThan0~10_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|counter [31]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|counter[31] .is_wysiwyg = "true";
defparam \clk_divider|counter[31] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X40_Y1_N4
fiftyfivenm_lcell_comb \clk_divider|LessThan0~1 (
// Equation(s):
// \clk_divider|LessThan0~1_combout  = (\clk_divider|LessThan0~0_combout  & (!\clk_divider|counter [29] & (!\clk_divider|counter [31] & !\clk_divider|counter [30])))

	.dataa(\clk_divider|LessThan0~0_combout ),
	.datab(\clk_divider|counter [29]),
	.datac(\clk_divider|counter [31]),
	.datad(\clk_divider|counter [30]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~1_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~1 .lut_mask = 16'h0002;
defparam \clk_divider|LessThan0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X40_Y1_N0
fiftyfivenm_lcell_comb \clk_divider|LessThan0~10 (
// Equation(s):
// \clk_divider|LessThan0~10_combout  = ((\clk_divider|counter [24] & ((\clk_divider|counter [23]) # (!\clk_divider|LessThan0~9_combout )))) # (!\clk_divider|LessThan0~1_combout )

	.dataa(\clk_divider|counter [23]),
	.datab(\clk_divider|LessThan0~9_combout ),
	.datac(\clk_divider|LessThan0~1_combout ),
	.datad(\clk_divider|counter [24]),
	.cin(gnd),
	.combout(\clk_divider|LessThan0~10_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|LessThan0~10 .lut_mask = 16'hBF0F;
defparam \clk_divider|LessThan0~10 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X40_Y1_N20
fiftyfivenm_lcell_comb \clk_divider|clk_out~0 (
// Equation(s):
// \clk_divider|clk_out~0_combout  = \clk_divider|clk_out~q  $ (\clk_divider|LessThan0~10_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\clk_divider|clk_out~q ),
	.datad(\clk_divider|LessThan0~10_combout ),
	.cin(gnd),
	.combout(\clk_divider|clk_out~0_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divider|clk_out~0 .lut_mask = 16'h0FF0;
defparam \clk_divider|clk_out~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X40_Y1_N21
dffeas \clk_divider|clk_out (
	.clk(\MAX10_CLK1_50~input_o ),
	.d(\clk_divider|clk_out~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|clk_out~q ),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|clk_out .is_wysiwyg = "true";
defparam \clk_divider|clk_out .power_up = "low";
// synopsys translate_on

// Location: CLKCTRL_G18
fiftyfivenm_clkctrl \clk_divider|clk_out~clkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk_divider|clk_out~q }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk_divider|clk_out~clkctrl_outclk ));
// synopsys translate_off
defparam \clk_divider|clk_out~clkctrl .clock_type = "global clock";
defparam \clk_divider|clk_out~clkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X51_Y54_N29
fiftyfivenm_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .listen_to_nsleep_signal = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X69_Y54_N1
fiftyfivenm_io_ibuf \SW[9]~input (
	.i(SW[9]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[9]~input_o ));
// synopsys translate_off
defparam \SW[9]~input .bus_hold = "false";
defparam \SW[9]~input .listen_to_nsleep_signal = "false";
defparam \SW[9]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X51_Y53_N24
fiftyfivenm_lcell_comb \C1|count~3 (
// Equation(s):
// \C1|count~3_combout  = (\SW[9]~input_o  & (\SW[0]~input_o )) # (!\SW[9]~input_o  & ((!\C1|count [0])))

	.dataa(gnd),
	.datab(\SW[0]~input_o ),
	.datac(\C1|count [0]),
	.datad(\SW[9]~input_o ),
	.cin(gnd),
	.combout(\C1|count~3_combout ),
	.cout());
// synopsys translate_off
defparam \C1|count~3 .lut_mask = 16'hCC0F;
defparam \C1|count~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X46_Y54_N29
fiftyfivenm_io_ibuf \KEY[0]~input (
	.i(KEY[0]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\KEY[0]~input_o ));
// synopsys translate_off
defparam \KEY[0]~input .bus_hold = "false";
defparam \KEY[0]~input .listen_to_nsleep_signal = "false";
defparam \KEY[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X51_Y53_N25
dffeas \C1|count[0] (
	.clk(\clk_divider|clk_out~clkctrl_outclk ),
	.d(\C1|count~3_combout ),
	.asdata(vcc),
	.clrn(!\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\C1|count [0]),
	.prn(vcc));
// synopsys translate_off
defparam \C1|count[0] .is_wysiwyg = "true";
defparam \C1|count[0] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X49_Y54_N29
fiftyfivenm_io_ibuf \KEY[1]~input (
	.i(KEY[1]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\KEY[1]~input_o ));
// synopsys translate_off
defparam \KEY[1]~input .bus_hold = "false";
defparam \KEY[1]~input .listen_to_nsleep_signal = "false";
defparam \KEY[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X51_Y53_N12
fiftyfivenm_lcell_comb \C1|count[1]~5 (
// Equation(s):
// \C1|count[1]~5_cout  = CARRY(\C1|count [0])

	.dataa(gnd),
	.datab(\C1|count [0]),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(),
	.cout(\C1|count[1]~5_cout ));
// synopsys translate_off
defparam \C1|count[1]~5 .lut_mask = 16'h00CC;
defparam \C1|count[1]~5 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X51_Y53_N14
fiftyfivenm_lcell_comb \C1|count[1]~6 (
// Equation(s):
// \C1|count[1]~6_combout  = (\KEY[1]~input_o  & ((\C1|count [1] & (!\C1|count[1]~5_cout )) # (!\C1|count [1] & ((\C1|count[1]~5_cout ) # (GND))))) # (!\KEY[1]~input_o  & ((\C1|count [1] & (\C1|count[1]~5_cout  & VCC)) # (!\C1|count [1] & 
// (!\C1|count[1]~5_cout ))))
// \C1|count[1]~7  = CARRY((\KEY[1]~input_o  & ((!\C1|count[1]~5_cout ) # (!\C1|count [1]))) # (!\KEY[1]~input_o  & (!\C1|count [1] & !\C1|count[1]~5_cout )))

	.dataa(\KEY[1]~input_o ),
	.datab(\C1|count [1]),
	.datac(gnd),
	.datad(vcc),
	.cin(\C1|count[1]~5_cout ),
	.combout(\C1|count[1]~6_combout ),
	.cout(\C1|count[1]~7 ));
// synopsys translate_off
defparam \C1|count[1]~6 .lut_mask = 16'h692B;
defparam \C1|count[1]~6 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: IOIBUF_X51_Y54_N22
fiftyfivenm_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .listen_to_nsleep_signal = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X51_Y53_N15
dffeas \C1|count[1] (
	.clk(\clk_divider|clk_out~clkctrl_outclk ),
	.d(\C1|count[1]~6_combout ),
	.asdata(\SW[1]~input_o ),
	.clrn(!\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(\SW[9]~input_o ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\C1|count [1]),
	.prn(vcc));
// synopsys translate_off
defparam \C1|count[1] .is_wysiwyg = "true";
defparam \C1|count[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X51_Y53_N16
fiftyfivenm_lcell_comb \C1|count[2]~8 (
// Equation(s):
// \C1|count[2]~8_combout  = ((\KEY[1]~input_o  $ (\C1|count [2] $ (\C1|count[1]~7 )))) # (GND)
// \C1|count[2]~9  = CARRY((\KEY[1]~input_o  & (\C1|count [2] & !\C1|count[1]~7 )) # (!\KEY[1]~input_o  & ((\C1|count [2]) # (!\C1|count[1]~7 ))))

	.dataa(\KEY[1]~input_o ),
	.datab(\C1|count [2]),
	.datac(gnd),
	.datad(vcc),
	.cin(\C1|count[1]~7 ),
	.combout(\C1|count[2]~8_combout ),
	.cout(\C1|count[2]~9 ));
// synopsys translate_off
defparam \C1|count[2]~8 .lut_mask = 16'h964D;
defparam \C1|count[2]~8 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: IOIBUF_X51_Y54_N1
fiftyfivenm_io_ibuf \SW[2]~input (
	.i(SW[2]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[2]~input_o ));
// synopsys translate_off
defparam \SW[2]~input .bus_hold = "false";
defparam \SW[2]~input .listen_to_nsleep_signal = "false";
defparam \SW[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X51_Y53_N17
dffeas \C1|count[2] (
	.clk(\clk_divider|clk_out~clkctrl_outclk ),
	.d(\C1|count[2]~8_combout ),
	.asdata(\SW[2]~input_o ),
	.clrn(!\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(\SW[9]~input_o ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\C1|count [2]),
	.prn(vcc));
// synopsys translate_off
defparam \C1|count[2] .is_wysiwyg = "true";
defparam \C1|count[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X51_Y53_N18
fiftyfivenm_lcell_comb \C1|count[3]~10 (
// Equation(s):
// \C1|count[3]~10_combout  = \KEY[1]~input_o  $ (\C1|count[2]~9  $ (!\C1|count [3]))

	.dataa(\KEY[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\C1|count [3]),
	.cin(\C1|count[2]~9 ),
	.combout(\C1|count[3]~10_combout ),
	.cout());
// synopsys translate_off
defparam \C1|count[3]~10 .lut_mask = 16'h5AA5;
defparam \C1|count[3]~10 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: IOIBUF_X54_Y54_N29
fiftyfivenm_io_ibuf \SW[3]~input (
	.i(SW[3]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[3]~input_o ));
// synopsys translate_off
defparam \SW[3]~input .bus_hold = "false";
defparam \SW[3]~input .listen_to_nsleep_signal = "false";
defparam \SW[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X51_Y53_N19
dffeas \C1|count[3] (
	.clk(\clk_divider|clk_out~clkctrl_outclk ),
	.d(\C1|count[3]~10_combout ),
	.asdata(\SW[3]~input_o ),
	.clrn(!\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(\SW[9]~input_o ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\C1|count [3]),
	.prn(vcc));
// synopsys translate_off
defparam \C1|count[3] .is_wysiwyg = "true";
defparam \C1|count[3] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X54_Y54_N22
fiftyfivenm_io_ibuf \SW[4]~input (
	.i(SW[4]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[4]~input_o ));
// synopsys translate_off
defparam \SW[4]~input .bus_hold = "false";
defparam \SW[4]~input .listen_to_nsleep_signal = "false";
defparam \SW[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X49_Y54_N1
fiftyfivenm_io_ibuf \SW[5]~input (
	.i(SW[5]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[5]~input_o ));
// synopsys translate_off
defparam \SW[5]~input .bus_hold = "false";
defparam \SW[5]~input .listen_to_nsleep_signal = "false";
defparam \SW[5]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X54_Y54_N15
fiftyfivenm_io_ibuf \SW[6]~input (
	.i(SW[6]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[6]~input_o ));
// synopsys translate_off
defparam \SW[6]~input .bus_hold = "false";
defparam \SW[6]~input .listen_to_nsleep_signal = "false";
defparam \SW[6]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X58_Y54_N29
fiftyfivenm_io_ibuf \SW[7]~input (
	.i(SW[7]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[7]~input_o ));
// synopsys translate_off
defparam \SW[7]~input .bus_hold = "false";
defparam \SW[7]~input .listen_to_nsleep_signal = "false";
defparam \SW[7]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X56_Y54_N1
fiftyfivenm_io_ibuf \SW[8]~input (
	.i(SW[8]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\SW[8]~input_o ));
// synopsys translate_off
defparam \SW[8]~input .bus_hold = "false";
defparam \SW[8]~input .listen_to_nsleep_signal = "false";
defparam \SW[8]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: UNVM_X0_Y40_N40
fiftyfivenm_unvm \~QUARTUS_CREATED_UNVM~ (
	.arclk(vcc),
	.arshft(vcc),
	.drclk(vcc),
	.drshft(vcc),
	.drdin(vcc),
	.nprogram(vcc),
	.nerase(vcc),
	.nosc_ena(\~QUARTUS_CREATED_GND~I_combout ),
	.par_en(vcc),
	.xe_ye(\~QUARTUS_CREATED_GND~I_combout ),
	.se(\~QUARTUS_CREATED_GND~I_combout ),
	.ardin(23'b11111111111111111111111),
	.busy(\~QUARTUS_CREATED_UNVM~~busy ),
	.osc(),
	.bgpbusy(),
	.sp_pass(),
	.se_pass(),
	.drdout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_UNVM~ .addr_range1_end_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .addr_range1_offset = -1;
defparam \~QUARTUS_CREATED_UNVM~ .addr_range2_end_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .addr_range2_offset = -1;
defparam \~QUARTUS_CREATED_UNVM~ .addr_range3_offset = -1;
defparam \~QUARTUS_CREATED_UNVM~ .is_compressed_image = "false";
defparam \~QUARTUS_CREATED_UNVM~ .is_dual_boot = "false";
defparam \~QUARTUS_CREATED_UNVM~ .is_eram_skip = "false";
defparam \~QUARTUS_CREATED_UNVM~ .max_ufm_valid_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .max_valid_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .min_ufm_valid_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .min_valid_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .part_name = "quartus_created_unvm";
defparam \~QUARTUS_CREATED_UNVM~ .reserve_block = "true";
// synopsys translate_on

// Location: ADCBLOCK_X43_Y52_N0
fiftyfivenm_adcblock \~QUARTUS_CREATED_ADC1~ (
	.soc(\~QUARTUS_CREATED_GND~I_combout ),
	.usr_pwd(vcc),
	.tsen(\~QUARTUS_CREATED_GND~I_combout ),
	.clkin_from_pll_c0(gnd),
	.chsel({\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout }),
	.eoc(\~QUARTUS_CREATED_ADC1~~eoc ),
	.dout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_ADC1~ .analog_input_pin_mask = 0;
defparam \~QUARTUS_CREATED_ADC1~ .clkdiv = 1;
defparam \~QUARTUS_CREATED_ADC1~ .device_partname_fivechar_prefix = "none";
defparam \~QUARTUS_CREATED_ADC1~ .is_this_first_or_second_adc = 1;
defparam \~QUARTUS_CREATED_ADC1~ .prescalar = 0;
defparam \~QUARTUS_CREATED_ADC1~ .pwd = 1;
defparam \~QUARTUS_CREATED_ADC1~ .refsel = 0;
defparam \~QUARTUS_CREATED_ADC1~ .reserve_block = "true";
defparam \~QUARTUS_CREATED_ADC1~ .testbits = 66;
defparam \~QUARTUS_CREATED_ADC1~ .tsclkdiv = 1;
defparam \~QUARTUS_CREATED_ADC1~ .tsclksel = 0;
// synopsys translate_on

// Location: ADCBLOCK_X43_Y51_N0
fiftyfivenm_adcblock \~QUARTUS_CREATED_ADC2~ (
	.soc(\~QUARTUS_CREATED_GND~I_combout ),
	.usr_pwd(vcc),
	.tsen(\~QUARTUS_CREATED_GND~I_combout ),
	.clkin_from_pll_c0(gnd),
	.chsel({\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout }),
	.eoc(\~QUARTUS_CREATED_ADC2~~eoc ),
	.dout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_ADC2~ .analog_input_pin_mask = 0;
defparam \~QUARTUS_CREATED_ADC2~ .clkdiv = 1;
defparam \~QUARTUS_CREATED_ADC2~ .device_partname_fivechar_prefix = "none";
defparam \~QUARTUS_CREATED_ADC2~ .is_this_first_or_second_adc = 2;
defparam \~QUARTUS_CREATED_ADC2~ .prescalar = 0;
defparam \~QUARTUS_CREATED_ADC2~ .pwd = 1;
defparam \~QUARTUS_CREATED_ADC2~ .refsel = 0;
defparam \~QUARTUS_CREATED_ADC2~ .reserve_block = "true";
defparam \~QUARTUS_CREATED_ADC2~ .testbits = 66;
defparam \~QUARTUS_CREATED_ADC2~ .tsclkdiv = 1;
defparam \~QUARTUS_CREATED_ADC2~ .tsclksel = 0;
// synopsys translate_on

assign LEDR[0] = \LEDR[0]~output_o ;

assign LEDR[1] = \LEDR[1]~output_o ;

assign LEDR[2] = \LEDR[2]~output_o ;

assign LEDR[3] = \LEDR[3]~output_o ;

assign LEDR[4] = \LEDR[4]~output_o ;

assign LEDR[5] = \LEDR[5]~output_o ;

assign LEDR[6] = \LEDR[6]~output_o ;

assign LEDR[7] = \LEDR[7]~output_o ;

assign LEDR[8] = \LEDR[8]~output_o ;

assign LEDR[9] = \LEDR[9]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_TMS~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_TCK~	=>  Location: PIN_G2,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_TDI~	=>  Location: PIN_L4,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_TDO~	=>  Location: PIN_M5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_CONFIG_SEL~	=>  Location: PIN_H10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCONFIG~	=>  Location: PIN_H9,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_nSTATUS~	=>  Location: PIN_G9,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_CONF_DONE~	=>  Location: PIN_F8,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_TMS~~padout ;
wire \~ALTERA_TCK~~padout ;
wire \~ALTERA_TDI~~padout ;
wire \~ALTERA_CONFIG_SEL~~padout ;
wire \~ALTERA_nCONFIG~~padout ;
wire \~ALTERA_nSTATUS~~padout ;
wire \~ALTERA_CONF_DONE~~padout ;
wire \~ALTERA_TMS~~ibuf_o ;
wire \~ALTERA_TCK~~ibuf_o ;
wire \~ALTERA_TDI~~ibuf_o ;
wire \~ALTERA_CONFIG_SEL~~ibuf_o ;
wire \~ALTERA_nCONFIG~~ibuf_o ;
wire \~ALTERA_nSTATUS~~ibuf_o ;
wire \~ALTERA_CONF_DONE~~ibuf_o ;


endmodule

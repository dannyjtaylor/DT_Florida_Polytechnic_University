
DT_PRG3_B_B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000d2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000126  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000158  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000198  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000692  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000610  00000000  00000000  00000852  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000021b  00000000  00000000  00000e62  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  00001080  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000035d  00000000  00000000  000010c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000049  00000000  00000000  00001425  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000146e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__vector_7>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 67 00 	jmp	0xce	; 0xce <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

 int main(void) {
 
	//Part B - Interrupt
	//Data Direction, set pin 3 on PORTB for output, and clear the bit on the port before timer starts
	DDRB |= 1<<3;
  80:	84 b1       	in	r24, 0x04	; 4
  82:	88 60       	ori	r24, 0x08	; 8
  84:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~(1<<3);
  86:	85 b1       	in	r24, 0x05	; 5
  88:	87 7f       	andi	r24, 0xF7	; 247
  8a:	85 b9       	out	0x05, r24	; 5
 
		//Start Clock
		//CTC Mode
		TCCR2A = 0x02;
  8c:	82 e0       	ldi	r24, 0x02	; 2
  8e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
		//No Prescaler
		TCCR2B = 0x01;
  92:	91 e0       	ldi	r25, 0x01	; 1
  94:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
		//Counter initiation
		TCNT2 = 0;
  98:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
		OCR2A = 159;
  9c:	9f e9       	ldi	r25, 0x9F	; 159
  9e:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
		//Mask for Interrupt
		TIMSK2 = 1<<OCIE2A;
  a2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>
		//Enable Global Interrupt
		sei();
  a6:	78 94       	sei
  a8:	ff cf       	rjmp	.-2      	; 0xa8 <main+0x28>

000000aa <__vector_7>:
	
	return 0;
 }
	
	//interrupt service routine 
 ISR(TIMER2_COMPA_vect) {
  aa:	1f 92       	push	r1
  ac:	0f 92       	push	r0
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	0f 92       	push	r0
  b2:	11 24       	eor	r1, r1
  b4:	8f 93       	push	r24
  b6:	9f 93       	push	r25
	 PORTB ^= 1<<3;
  b8:	95 b1       	in	r25, 0x05	; 5
  ba:	88 e0       	ldi	r24, 0x08	; 8
  bc:	89 27       	eor	r24, r25
  be:	85 b9       	out	0x05, r24	; 5
  c0:	9f 91       	pop	r25
  c2:	8f 91       	pop	r24
  c4:	0f 90       	pop	r0
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	0f 90       	pop	r0
  ca:	1f 90       	pop	r1
  cc:	18 95       	reti

000000ce <_exit>:
  ce:	f8 94       	cli

000000d0 <__stop_program>:
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <__stop_program>
